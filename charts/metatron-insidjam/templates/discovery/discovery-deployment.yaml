apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "metatron-single.name" . }}-{{ .Values.discovery.name }}
  labels:
{{ include "metatron-single.labels" . | indent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "metatron-single.name" . }}-{{ .Values.discovery.name }}
      app.kubernetes.io/instance: {{ .Release.Name }}-{{ .Values.discovery.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "metatron-single.name" . }}-{{ .Values.discovery.name }}
        app.kubernetes.io/instance: {{ .Release.Name }}-{{ .Values.discovery.name }}
    spec:
      serviceAccountName: {{ include "metatron-single.name" . }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ template "metatron-single.name" . }}-{{ .Values.discovery.name }}-config
            defaultMode: 0777
      {{- if and .Values.discovery.persistence.enabled }}
        - name: h2-backup
          persistentVolumeClaim:
            claimName: {{ include "metatron-single.name" . }}-{{ .Values.discovery.name }}
      {{- end }}
        - name: ingested-volume
          persistentVolumeClaim:
            claimName: {{ include "metatron-single.name" . }}-polaris
      containers:
        - name: {{ .Chart.Name }}-{{ .Values.discovery.name }}
          image: "{{ .Values.discovery.image }}:{{ .Values.discovery.tag }}"
          imagePullPolicy: {{ .Values.discovery.imagePullPolicy }}
          env:
        {{- if .Values.internalDatabase.enabled }}
          - name: METATRON_DB_TYPE
            value: h2
          - name: METATRON_H2_DATA_DIR
            value: /app/h2_backup
        {{- else if .Values.mariadb.enabled }}
          - name: METATRON_DB_TYPE
            value: mysql
          - name: MYSQL_HOST
            value: {{ template "nextcloud.mariadb.fullname" . }}
          - name: MYSQL_DATABASE
            value: {{ .Values.mariadb.db.name | quote }}
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.externalDatabase.existingSecret.secretName | default (printf "%s-%s" .Release.Name "db") }}
                key: {{ .Values.externalDatabase.existingSecret.usernameKey | default "db-username" }}
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.externalDatabase.existingSecret.secretName | default (printf "%s-%s" .Release.Name "db") }}
                key: {{ .Values.externalDatabase.existingSecret.passwordKey | default "db-password" }}
          {{- else }}
          - name: METATRON_DB_TYPE
            value: mysql          
          - name: MYSQL_HOST
            value: {{ .Values.externalDatabase.host | quote }}
          - name: MYSQL_DATABASE
            value: {{ .Values.externalDatabase.database | quote }}
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.externalDatabase.existingSecret.secretName | default (printf "%s-%s" .Release.Name "db") }}
                key: {{ .Values.externalDatabase.existingSecret.usernameKey | default "db-username" }}
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.externalDatabase.existingSecret.secretName | default (printf "%s-%s" .Release.Name "db") }}
                key: {{ .Values.externalDatabase.existingSecret.passwordKey | default "db-password" }}
        {{- end }}  

          - name: METATRON_POLARIS_HOSTNAME
            value: {{ include "metatron-single.name" . }}-{{ .Values.druid.name }}.{{ .Release.Namespace }}.svc
          - name: METATRON_INGESTED_FOLER
            value: /ingested
          volumeMounts:
          - name: config-volume
            mountPath: /etc/config
          - name: ingested-volume
            mountPath: /ingested
        {{- if and .Values.discovery.persistence.enabled }}
          - name: h2-backup
            mountPath: /app/h2_backup
        {{- end }}
          command: ["/bin/sh", "-c"]
          args:  ["/etc/config/run.sh"]
          ports:
            - name: http
              containerPort: 8180
              protocol: TCP
          resources:
            {{- toYaml .Values.discovery.resources | nindent 12 }}
    {{- with .Values.discovery.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.discovery.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
